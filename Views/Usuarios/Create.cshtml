@model adventureworks.Models.usuario

@{
    ViewBag.Title = "Create";
}

<section class="py-5">
    <div class="container px-5">
        <h2 class="fw-bolder fs-5 mb-4">Crear Nuevo Usuario</h2>
        @using (Html.BeginForm("Create", "Usuarios", FormMethod.Post, new { enctype = "multipart/form-data" }))
        {
            @Html.AntiForgeryToken()

            <div class="form-horizontal">
                <h4>Usuario</h4>
                <hr />
                <div class="form-group">
                    @Html.LabelFor(model => model.usuario_codigo, htmlAttributes: new { @class = "control-label col-md-2" })
                    <div class="col-md-10">
                        @Html.EditorFor(model => model.usuario_codigo, new { htmlAttributes = new { @class = "form-control" } })
                        @Html.ValidationMessageFor(model => model.usuario_codigo, "", new { @class = "text-danger" })
                    </div>
                </div>
                <div class="form-group">
                    @Html.LabelFor(model => model.usuario_nombre, htmlAttributes: new { @class = "control-label col-md-2" })
                    <div class="col-md-10">
                        @Html.EditorFor(model => model.usuario_nombre, new { htmlAttributes = new { @class = "form-control" } })
                        @Html.ValidationMessageFor(model => model.usuario_nombre, "", new { @class = "text-danger" })
                    </div>
                </div>

                <div class="form-group">
                    @Html.LabelFor(model => model.usuario_contrasena, htmlAttributes: new { @class = "control-label col-md-2" })
                    <div class="col-md-10">
                        <input class="form-control text-box single-line" id="usuario_contrasena" name="usuario_contrasena" type="password">
                        @Html.ValidationMessageFor(model => model.usuario_contrasena, "", new { @class = "text-danger" })
                    </div>
                </div><br />

                <div class="form-group">
                    <div class="col-md-offset-2 col-md-10">
                        <input type="submit" value="Create" class="btn btn-primary" />
                        @Html.ActionLink("Regresar", "Index", null, new { @class = "btn btn-outline-secondary" })
                    </div>
                </div>
            </div>
        }

    </div>
</section>

@if (!ViewData.ModelState.IsValid && ViewData.ModelState.Values.Any(v => v.Errors.Count > 0))
{
    var erroresHtml = string.Join("<br>", ViewData.ModelState.Values
    .SelectMany(v => v.Errors)
    .Select(e => HttpUtility.JavaScriptStringEncode(e.ErrorMessage)));

    <script>
        $(document).ready(function () {
            Swal.fire({
                title: 'Errores en el formulario',
                html: '@Html.Raw(erroresHtml)',
                icon: 'error',
                confirmButtonText: 'Aceptar'
            });
        });
    </script>
}




@*using (Html.BeginForm())
    {
        @Html.AntiForgeryToken()

        <div class="form-horizontal">
            <h4>usuario</h4>
            <hr />
            @Html.ValidationSummary(true, "", new { @class = "text-danger" })
            <div class="form-group">
                @Html.LabelFor(model => model.usuario_nombre, htmlAttributes: new { @class = "control-label col-md-2" })
                <div class="col-md-10">
                    @Html.EditorFor(model => model.usuario_nombre, new { htmlAttributes = new { @class = "form-control" } })
                    @Html.ValidationMessageFor(model => model.usuario_nombre, "", new { @class = "text-danger" })
                </div>
            </div>

            <div class="form-group">
                @Html.LabelFor(model => model.usuario_codigo, htmlAttributes: new { @class = "control-label col-md-2" })
                <div class="col-md-10">
                    @Html.EditorFor(model => model.usuario_codigo, new { htmlAttributes = new { @class = "form-control" } })
                    @Html.ValidationMessageFor(model => model.usuario_codigo, "", new { @class = "text-danger" })
                </div>
            </div>

            <div class="form-group">
                @Html.LabelFor(model => model.usuario_contrasena, htmlAttributes: new { @class = "control-label col-md-2" })
                <div class="col-md-10">
                    @Html.EditorFor(model => model.usuario_contrasena, new { htmlAttributes = new { @class = "form-control" } })
                    @Html.ValidationMessageFor(model => model.usuario_contrasena, "", new { @class = "text-danger" })
                </div>
            </div>

            <div class="form-group">
                <div class="col-md-offset-2 col-md-10">
                    <input type="submit" value="Create" class="btn btn-default" />
                </div>
            </div>
        </div>
    }

    <div>
        @Html.ActionLink("Back to List", "Index")
    </div>

    @section Scripts {
        @Scripts.Render("~/bundles/jqueryval")
    }*@
