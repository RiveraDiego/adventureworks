@using PagedList;
@using PagedList.Mvc;

@model IPagedList<adventureworks.Models.foto>

@{
    ViewBag.Title = "Listado";
}
<section class="py-5">
    <div class="container px-5">
        <!-- Paginacion -->
        <nav aria-label="Page navigation example" class="mb-5">
            <ul class="pagination justify-content-center">
                @if (Model.HasPreviousPage)
                {
                    <li class="page-item">
                        <a class="page-link" href="@Url.Action("Listado", new { page = Model.PageNumber - 1 })">Anterior</a>
                    </li>
                }
                @for (int i = 1; i <= Model.PageCount; i++)
                {
                    <li class="page-item @(i == Model.PageNumber ? "active" : "")">
                        <a class="page-link" href="@Url.Action("Listado", new { page = i })">@i</a>
                    </li>
                }
                @if (Model.HasNextPage)
                {
                    <li class="page-item">
                        <a class="page-link" href="@Url.Action("Listado", new { page = Model.PageNumber + 1 })">Siguiente</a>
                    </li>
                }
            </ul>
        </nav>
        <!-- Fin de Paginacion -->
        <div class="row gx-5">
            @foreach (var item in Model)
            {
                <div class="col-lg-3 mb-5">
                    <div class="card h-90 shadow border-0">
                        <div style="background-image:url('@item.FotoFile');background-repeat:no-repeat;background-position:center;background-size:cover;width:100%;height:15rem;">
                        </div>
                        <div class="card-body p-4">
                            <a class="text-decoration-none link-dark stretched-link" href="@Url.Action("Details", "Fotos", new { id = item.foto_id })">
                                <div class="h4 card-title mb-3">
                                    @{
                                        var truncatedTitle = item.foto_titulo.Length > 20
                                            ? item.foto_titulo.Substring(0, 20) + "..."
                                            : item.foto_titulo;
                                    }
                                    @truncatedTitle
                                </div>
                            </a>
                            <p class="card-text mb-0 text-black-50">
                                @{
                                    var truncatedDescription = item.foto_descripcion.Length > 30
                                        ? item.foto_descripcion.Substring(0, 30) + "..."
                                        : item.foto_descripcion;
                                }
                                @truncatedDescription
                            </p>
                        </div>
                        <div class="card-footer p-4 bg-transparent">
                            <div class="d-flex align-items-end justify-content-between">
                                <div class="d-flex align-items-center">
                                    <i class="fa-solid fa-user fa-2x"></i>
                                    <div class="small p-2">
                                        <div class="fw-bold">@Html.DisplayFor(modelItem => item.usuario.usuario_nombre)</div>
                                        <div class="text-muted">
                                            @Html.DisplayFor(modelItem => item.foto_fecha_creacion) &middot;
                                        </div>
                                    </div>
                                </div>
                            </div>
                        </div>
                    </div>
                </div>
            }
        </div>
        <!-- Paginacion -->
        <nav aria-label="Page navigation example" class="mb-5">
            <ul class="pagination justify-content-center">
                @if (Model.HasPreviousPage)
                {
                    <li class="page-item">
                        <a class="page-link" href="@Url.Action("Listado", new { page = Model.PageNumber - 1 })">Anterior</a>
                    </li>
                }
                @for (int i = 1; i <= Model.PageCount; i++)
                {
                    <li class="page-item @(i == Model.PageNumber ? "active" : "")">
                        <a class="page-link" href="@Url.Action("Listado", new { page = i })">@i</a>
                    </li>
                }
                @if (Model.HasNextPage)
                {
                    <li class="page-item">
                        <a class="page-link" href="@Url.Action("Listado", new { page = Model.PageNumber + 1 })">Siguiente</a>
                    </li>
                }
            </ul>
        </nav>
        <!-- Fin de Paginacion -->
    </div>
</section>
