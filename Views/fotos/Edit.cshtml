@model adventureworks.Models.foto
@using adventureworks.Utils

@{
    ViewBag.Title = "Editar | "+Model.foto_titulo;
}
<style>
    #preview-image {
        transition: opacity 0.5s ease-in-out; /* Duración y tipo de transición */
        opacity: 1; /* Inicia completamente visible */
    }

        #preview-image.hidden {
            opacity: 0; /* Oculta la imagen */
        }
</style>
<section class="py-5">
    <div class="container px-5">
        <h2 class="fw-bolder fs-5 mb-4">Editar @Model.foto_titulo</h2>
        <hr />
        <div class="row">
            <div class="col-sm-12 col-md-6 col-lg-6">
                @using (Html.BeginForm("Edit", "Fotos", FormMethod.Post, new { enctype = "multipart/form-data" }))
                {
                    @Html.AntiForgeryToken()
                    <div class="form-horizontal">
                        @Html.ValidationSummary(true, "", new { @class = "text-danger" })
                        @Html.HiddenFor(model => model.foto_id)

                        <div class="row mb-5">
                            <div class="col-sm-2 col-md-3 col-lg-2 d-flex align-items-center">
                                @Html.Label("Titulo:", htmlAttributes: new { @class = "control-label col-form-label", @for = "foto_titulo" })
                            </div>
                            <div class="col-sm-10 col-md-9 col-lg-10 d-flex align-items-center">
                                @Html.EditorFor(model => model.foto_titulo, new { htmlAttributes = new { @class = "form-control", maxlength = "100" } })
                                @Html.ValidationMessageFor(model => model.foto_titulo, "", new { @class = "text-danger" })
                            </div>
                        </div>

                        <div class="row mb-5">
                            <div class="col-sm-2 col-md-3 col-lg-2 d-flex align-items-center">
                                @Html.Label("Cambiar Foto:", htmlAttributes: new { @class = "control-label col-form-label", @for = "subir-imagen" })
                            </div>
                            <div class="col-sm-10 col-md-9 col-lg-10 d-flex align-items-center">
                                <input type="file" name="file" class="form-control" id="subir-imagen" value="@Model.FotoFile" />
                                <span class="text-danger">
                                    @ViewBag.FileError
                                </span>
                            </div>
                        </div>

                        <div class="row mb-5">
                            <div class="col-sm-2 col-md-3 col-lg-2 d-flex align-items-center">
                                @Html.Label("Descripción:", htmlAttributes: new { @class = "control-label col-form-label", @for = "foto_descripcion" })
                            </div>
                            <div class="col-sm-10 col-md-9 col-lg-10 d-flex align-items-center">
                                @Html.EditorFor(model => model.foto_descripcion, new { htmlAttributes = new { @class = "form-control", maxlength = "255", rows="5" } })
                                @Html.ValidationMessageFor(model => model.foto_descripcion, "", new { @class = "text-danger" })
                            </div>
                        </div>
                        <div class="row mb-5">
                            <div class="col-xs-12">
                                <div class="row">
                                    <div class="col-xs-4 col-sm-4 col-md-4 col-lg-4 d-flex align-items-center">
                                        <a class="btn btn-outline-primary btn-sm" href="@Url.Action("MisPublicaciones","Usuarios")">
                                            <i class="fa-solid fa-arrow-left"></i> @UiMessages.BtnRegresar
                                        </a>
                                    </div>
                                    <div class="col-xs-4 col-sm-4 col-md-4 col-lg-4 offset-sm-4 offset-md-4 offset-lg-4 d-flex align-items-center justify-content-end">
                                        <button type="submit" class="btn btn-primary">
                                            <i class="fa-solid fa-save"></i> @UiMessages.BtnGuardar
                                        </button>
                                    </div>
                                </div>
                            </div>
                        </div>

                    </div>
                }
            </div>
            <div class="col-sm-12 col-md-6 col-lg-6 border border-light-subtle" onclick="subirImagenDialog();" style="cursor: pointer;">
                <div class="d-flex justify-content-center align-items-center" style="height: 300px;">
                    <img id="preview-image" src="@Model.FotoFile" alt="Vista previa" class="img-fluid" style="max-height: 100%; max-width: 100%; object-fit: cover;" />
                </div>
            </div>
        </div>
    </div>
</section>
@if (TempData["message"] != null)
{
    <script>
        $(document).ready(function () {
            Swal.fire({
                html: "@TempData["message"]",
                icon: "@TempData["icon"]",
                confirmButtonText: 'Aceptar'
            });
        });
    </script>
}
<script>
    function subirImagenDialog() {
        $("#subir-imagen").trigger("click");
    }

    $(document).ready(function () {
        $("#subir-imagen").on("change", function (event) {
            const file = event.target.files[0];
            const previewImage = $("#preview-image");

            if (file) {
                const reader = new FileReader();
                previewImage.addClass("hidden"); // Aplicar efectos de transicion suaves
                reader.onload = function (e) {
                    // Cambiar la imagen después de un pequeño retraso para que la transición ocurra
                    setTimeout(() => {
                        previewImage.attr("src", e.target.result); // Cambia la imagen
                        previewImage.removeClass("hidden"); // Quita la clase para mostrar la nueva imagen
                    }, 500); // Espera la duración de la transición
                };

                reader.readAsDataURL(file); // Lee el archivo como Data URL
            } else {
                previewImage.addClass("hidden");
                setTimeout(() => {
                    previewImage.attr("src", "/Content/imagenes/upload-image.png");
                    previewImage.removeClass("hidden");
                }, 500);
            }
        });
    });
</script>